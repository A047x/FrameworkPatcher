name: Modify Framework

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      framework_jar_url:
        description: 'URL to download framework.jar'
        required: true
        default: 'https://dumps.tadiphone.dev/dumps/redmi/xaga/-/raw/missi_phone_cn-user-14-UP1A.231005.007-V816.0.1.0.ULOCNXM-release-keys/system/system/framework/framework.jar'
      android_api_level:
        description: 'Android API level'
        required: true
        default: '29'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt full-upgrade -y
        sudo apt install -y default-jdk zipalign 7zip

    - name: Download framework.jar
      run: |
        curl -L -o framework.jar "${{ github.event.inputs.framework_jar_url }}"

    - name: Clone smali repository
      run: git clone --depth=1 https://github.com/JesusFreke/smali.git

    - name: Build smali and baksmali
      run: |
        cd smali
        ./gradlew build

    - name: Extract framework.jar
      run: 7z x framework.jar -oframework

    - name: Decompile dex files
      run: |
        java -jar smali/baksmali/build/libs/baksmali.jar d -a ${{ github.event.inputs.android_api_level }} framework/classes.dex -o classes
        java -jar smali/baksmali/build/libs/baksmali.jar d -a ${{ github.event.inputs.android_api_level }} framework/classes2.dex -o classes2
        java -jar smali/baksmali/build/libs/baksmali.jar d -a ${{ github.event.inputs.android_api_level }} framework/classes3.dex -o classes3

    - name: List decompiled files for debugging
      run: |
        echo "Contents of classes directory:"
        find classes
        echo "Contents of classes2 directory:"
        find classes2
        echo "Contents of classes3 directory:"
        find classes3

    - name: Backup smali files
      run: |
        cp -r classes classes_backup
        cp -r classes2 classes2_backup
        cp -r classes3 classes3_backup

    - name: Modify smali files
      run: |
        directories=("classes" "classes2" "classes3")

        for dir in "${directories[@]}"; do
          android_keystore_spi="$dir/android/security/keystore2/AndroidKeyStoreSpi.smali"
          instrumentation="$dir/android/app/Instrumentation.smali"
          application_package_manager="$dir/android/app/ApplicationPackageManager.smali"

          # Modify AndroidKeyStoreSpi.smali
          if [ -f "$android_keystore_spi" ]; then
            awk '
            /method.*engineGetCertificateChain/ { inMethod = 1 }
            inMethod && /return-object v3/ {
              print "    invoke-static {v3}, Lcom/android/internal/util/framework/Android;->engineGetCertificateChain([Ljava/security/cert/Certificate;)[Ljava/security/cert/Certificate;"
              print "    move-result-object v3"
              inMethod = 0
            }
            { print }
            ' "$android_keystore_spi" > "${android_keystore_spi}.tmp" && mv "${android_keystore_spi}.tmp" "$android_keystore_spi"
            echo "Modified AndroidKeyStoreSpi.smali in $dir"
          else
            echo "AndroidKeyStoreSpi.smali not found in $dir!"
          fi

          # Modify Instrumentation.smali
          if [ -f "$instrumentation" ]; then
            awk '
            /method.*newApplication/ { inMethod = 1 }
            inMethod && /return-object/ {
              print "    invoke-static {p1}, Lcom/android/internal/util/framework/Android;->onNewApp(Landroid/content/Context;)V"
              inMethod = 0
            }
            { print }
            ' "$instrumentation" > "${instrumentation}.tmp" && mv "${instrumentation}.tmp" "$instrumentation"
            echo "Modified Instrumentation.smali in $dir"
          else
            echo "Instrumentation.smali not found in $dir!"
          fi

          # Modify ApplicationPackageManager.smali
          if [ -f "$application_package_manager" ]; then
            awk '
            /method.*hasSystemFeature(Ljava\/lang\/String;)Z/ { inMethod = 1 }
            inMethod && /move-result v0/ && !/invoke-virtual/ {
              print "    invoke-static {v0, p1}, Lcom/android/internal/util/framework/Android;->hasSystemFeature(ZLjava/lang/String;)Z"
              print "    move-result v0"
            }
            inMethod && /return v0/ { inMethod = 0 }
            { print }
            ' "$application_package_manager" > "${application_package_manager}.tmp" && mv "${application_package_manager}.tmp" "$application_package_manager"
            echo "Modified ApplicationPackageManager.smali in $dir"
          else
            echo "ApplicationPackageManager.smali not found in $dir!"
          fi
        done

    - name: Recompile dex files
      run: |
        java -jar smali/smali/build/libs/smali.jar a -a ${{ github.event.inputs.android_api_level }} classes -o framework/classes.dex
        java -jar smali/smali/build/libs/smali.jar a -a ${{ github.event.inputs.android_api_level }} classes2 -o framework/classes2.dex
        java -jar smali/smali/build/libs/smali.jar a -a ${{ github.event.inputs.android_api_level }} classes3 -o framework/classes3.dex

    - name: Recompile framework.jar
      run: 7z a -tzip framework_new.jar framework/*

    - name: Align the zip
      run: zipalign -f -p -v -z 4 framework_new.jar aligned_framework.jar

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: aligned_framework
        path: aligned_framework.jar
